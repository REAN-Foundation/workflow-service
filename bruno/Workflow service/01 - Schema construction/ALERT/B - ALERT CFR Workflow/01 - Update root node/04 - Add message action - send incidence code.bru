meta {
  name: 04 - Add message action - send incidence code
  type: http
  seq: 4
}

post {
  url: {{BASE_URL}}/engine/node-actions
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  x-api-key: {{API_KEY}}
  Authorization: Bearer {{MODERATOR_USER_JWT}}
}

body:json {
  {
    "Type": "SendMessage",
    "Name": "Send incident code to CFR",
    "Description": "Send emergency incident code to the CFR",
    "Sequence": 3,
    "ParentNodeId": "{{CHILD_MAIN_ROOT_NODE_ID}}",
    "Input": {
      "Params": [
        {
          "Type": "Phonenumber",
          "Value": null,
          "Source": "Almanac",
          "Key": "ContextParams:CFR:Phonenumber"
        },
        {
          "Name": "Incident report Message",
          "Type": "Text",
          "Value": "The emergency incident code is {{ContextParams:IncidenceCode}}."
        },
        {
          "Name": "Incident code",
          "Type": "Placeholder",
          "Key": "ContextParams:IncidenceCode",
          "Source": "Almanac"
        }
      ]
    }
  }
}

tests {
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(201);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });

  test("Action is added", function () {
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('id');
      expect(jsonRes.Data).to.have.property('Name');
  });

}

docs {
  User login with username/phone/email and password.

  'LoginRoleId' is the role id through which user wants to log into the system provided the user has the role.
}
