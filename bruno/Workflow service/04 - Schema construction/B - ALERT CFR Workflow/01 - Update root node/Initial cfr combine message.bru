meta {
  name: Initial cfr combine message
  type: http
  seq: 2
}

post {
  url: {{BASE_URL}}/engine/node-actions
  body: json
  auth: none
}

headers {
  x-api-key: {{API_KEY}}
  Authorization: Bearer {{MODERATOR_USER_JWT}}
}

body:json {
  {
    "Type": "SendMessage",
    "Name": "Notify CFR of the incident and send location",
    "Description": "Sending incident notification and location to the CFR",
    "Sequence": 1,
    "ParentNodeId": "{{CHILD_SCHEMA_ROOT_NODE_ID}}",
    "Input": {
      "Params": [
        {
          "Name": "CFR Phonenumber",
          "Type": "Phonenumber",
          "Value": null,
          "Source": "Almanac",
          "Key": "ContextParams:CFR:Phonenumber"
        },
        {
          "Name": "Incident report Message",
          "Type": "Text",
          "Value": "An emergency incident has been reported in your locality at {{ContextParams:Timestamp}}."
        },
        {
          "Name": "Incident Timestamp",
          "Type": "Placeholder",
          "Key": "ContextParams:Timestamp",
          "Source": "Almanac"
        },
        {
          "Type": "Location",
          "Name": "Incident Location",
          "Source": "Almanac",
          "Key": "ContextParams:Location",
          "Value": {
            "Latitude": null,
            "Longitude": null
          }
        }
      ]
    }
  }
  
}

script:post-response {
  let status = res.getStatus();
  console.log(status)
  if (status == 201) {
    bru.setEnvVar("EXECUTION_NODE_1_ID", res.body.Data.id);
  }
}
