meta {
  name: Create execution node - EN6
  type: http
  seq: 1
}

post {
  url: {{BASE_URL}}/engine/nodes
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  x-api-key: {{API_KEY}}
  Authorization: Bearer {{MODERATOR_USER_JWT}}
}

body:json {
  {
    "Name": "EN4-Primary CFR details",
    "Description": "This execution node holds actions to find and share the primary CFR details.",
    "Type": "ExecutionNode",
    "ParentNodeId": "{{MAIN_EN4_ID}}",
    "SchemaId": "{{MAIN_SCHEMA_ID}}",
    "Actions": [
      {
        "Type": "ArraySort",
        "Name": "Sort responders array - Sort responders array",
        "Sequence": 0,
        "Input": {
          "Params": [
            {
              "Name": "Responded CFR Details",
              "Type": "Array",
              "Source": "Almanac",
              "SubType": "Object",
              "Key": "CFR:Responders",
              "Value": null,
              "ObjectParamTypes": [
                {
                  "Name": "Phone",
                  "Type": "Phone",
                  "Value": null
                },
                {
                  "Name": "ResponseTimestamp",
                  "Type": "DateTime",
                  "Value": null
                }
              ]
            },
            {
              "Name": "Sort By",
              "Type": "Text",
              "Key": "SortBy",
              "Value": "ResponseTimestamp"
            },
            {
              "Name": "Sort Order",
              "Type": "Text",
              "Key": "SortOrder",
              "Value": "asc"
            }
          ]
        },
        "Output": {
          "Params": [
            {
              "Name": "Output destination",
              "Type": "Array",
              "Destination": "Almanac",
              "Key": "CFR:Responders"
            }
          ]
        }
      },
      {
        "Type": "ArrayGetElement",
        "Name": "Get primary responder - Get first element of array",
        "Sequence": 1,
        "Input": {
          "Params": [
            {
              "Name": "Responded CFR Details - Sorted list",
              "Type": "Array",
              "Source": "Almanac",
              "SubType": "Object",
              "Key": "CFR:Responders",
              "Value": null,
              "ObjectParamTypes": [
                {
                  "Name": "Phone",
                  "Type": "Phone",
                  "Value": null
                },
                {
                  "Name": "ResponseTimestamp",
                  "Type": "DateTime",
                  "Value": null
                }
              ]
            },
            {
              "Name": "Index",
              "Type": "Integer",
              "Key": "Index",
              "Value": "0"
            }
          ]
        },
        "Output": {
          "Params": [
            {
              "Name": "Output to Almanac- Primary CFR object",
              "Type": "Object",
              "Destination": "Almanac",
              "Key": "CFR:PrimaryCFR"
            }
          ]
        }
      },
      {
        "Type": "GetObjectParam",
        "Name": "Get phone number from the Primary CFR contact",
        "Sequence": 2,
        "Input": {
          "Params": [
            {
              "Name": "Primary CFR details",
              "Type": "Object",
              "Source": "Almanac",
              "Key": "CFR:PrimaryCFR"
            },
            {
              "Name": "Phone number key",
              "Type": "Text",
              "SubType": "ObjectKey",
              "Key": "Phone",
              "Value": "Phone"
            }
          ]
        },
        "Output": {
          "Params": [
            {
              "Name": "Output to Almanac- Primary CFR phone number",
              "Type": "Phone",
              "Destination": "Almanac",
              "Key": "CFR:PrimaryCFR:Phone"
            }
          ]
        }
      },
      {
        "Type": "SendMessage",
        "Name": "Send message - Notify primary CFR details to reporter.",
        "Sequence": 3,
        "Input": {
          "Params": [
            {
              "Name": "Reporter Phone",
              "Type": "Phone",
              "Value": null,
              "Source": "Almanac",
              "Key": "ContextParams:Reporter:Phone"
            },
            {
              "Name": "Primary CFR details message",
              "Type": "Text",
              "Value": "Primary responder has been identified. The contact details - {{CFR:PrimaryCFR:Phone}}."
            },
            {
              "Name": "Primary CFR phone number",
              "Type": "Placeholder",
              "Key": "CFR:PrimaryCFR:Phone",
              "Source": "Almanac"
            }
          ]
        }
      }
    ]
  }
}

script:post-response {
  let status = res.getStatus();
  console.log(status)
  if (status == 201) {
    bru.setEnvVar("MAIN_EN6_ID", res.body.Data.id);
  }
  
}

tests {
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(201);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("Execution node is created", function () {
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('id');
      expect(jsonRes.Data).to.have.property('Name');
      expect(jsonRes.Data).to.have.property('Description');
  });
  
}

docs {
  User login with username/phone/email and password.
  
  'LoginRoleId' is the role id through which user wants to log into the system provided the user has the role.
}
