meta {
  name: Create badge category
  type: http
  seq: 1
}

post {
  url: {{BASE_URL}}/badge-categories
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  x-api-key: {{API_KEY}}
  Authorization: Bearer {{MODERATOR_USER_JWT}}
}

body:json {
  {
      "ClientId": "{{CLIENT_ID}}",
      "Name": "Exercise",
      "Description": "Badge category for exercise related badges",
      "ImageUrl": "https://e7.pngegg.com/pngimages/626/893/png-clipart-blue-and-white-check-logo-facebook-social-media-verified-badge-logo-vanity-url-blue-checkmark-blue-angle.png"
  }
}

tests {
  try {
      var jsonRes = res.getBody();
      bru.setEnvVar("BADGE_CATEGORY_ID", jsonRes.Data.id);
  }
  catch (error) {
      console.log(error.message);
  }
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(201);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("Participant is created", function () {
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('id');
  });
  
}

docs {
  User login with username/phone/email and password.
  
  'LoginRoleId' is the role id through which user wants to log into the system provided the user has the role.
}
